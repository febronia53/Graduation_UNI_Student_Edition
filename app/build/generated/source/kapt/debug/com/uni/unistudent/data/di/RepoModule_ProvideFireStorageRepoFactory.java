// Generated by Dagger (https://dagger.dev).
package com.uni.unistudent.data.di;

import com.google.firebase.storage.StorageReference;
import com.uni.unistudent.data.FireStorageRepo;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepoModule_ProvideFireStorageRepoFactory implements Factory<FireStorageRepo> {
  private final Provider<StorageReference> databaseProvider;

  public RepoModule_ProvideFireStorageRepoFactory(Provider<StorageReference> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public FireStorageRepo get() {
    return provideFireStorageRepo(databaseProvider.get());
  }

  public static RepoModule_ProvideFireStorageRepoFactory create(
      Provider<StorageReference> databaseProvider) {
    return new RepoModule_ProvideFireStorageRepoFactory(databaseProvider);
  }

  public static FireStorageRepo provideFireStorageRepo(StorageReference database) {
    return Preconditions.checkNotNullFromProvides(RepoModule.INSTANCE.provideFireStorageRepo(database));
  }
}
