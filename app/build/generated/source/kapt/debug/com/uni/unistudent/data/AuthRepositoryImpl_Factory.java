// Generated by Dagger (https://dagger.dev).
package com.uni.unistudent.data;

import android.content.SharedPreferences;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.firestore.FirebaseFirestore;
import com.google.gson.Gson;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthRepositoryImpl_Factory implements Factory<AuthRepositoryImpl> {
  private final Provider<FirebaseAuth> firebaseAuthProvider;

  private final Provider<FirebaseFirestore> databaseProvider;

  private final Provider<SharedPreferences> appPreferencesProvider;

  private final Provider<Gson> gsonProvider;

  public AuthRepositoryImpl_Factory(Provider<FirebaseAuth> firebaseAuthProvider,
      Provider<FirebaseFirestore> databaseProvider,
      Provider<SharedPreferences> appPreferencesProvider, Provider<Gson> gsonProvider) {
    this.firebaseAuthProvider = firebaseAuthProvider;
    this.databaseProvider = databaseProvider;
    this.appPreferencesProvider = appPreferencesProvider;
    this.gsonProvider = gsonProvider;
  }

  @Override
  public AuthRepositoryImpl get() {
    return newInstance(firebaseAuthProvider.get(), databaseProvider.get(), appPreferencesProvider.get(), gsonProvider.get());
  }

  public static AuthRepositoryImpl_Factory create(Provider<FirebaseAuth> firebaseAuthProvider,
      Provider<FirebaseFirestore> databaseProvider,
      Provider<SharedPreferences> appPreferencesProvider, Provider<Gson> gsonProvider) {
    return new AuthRepositoryImpl_Factory(firebaseAuthProvider, databaseProvider, appPreferencesProvider, gsonProvider);
  }

  public static AuthRepositoryImpl newInstance(FirebaseAuth firebaseAuth,
      FirebaseFirestore database, SharedPreferences appPreferences, Gson gson) {
    return new AuthRepositoryImpl(firebaseAuth, database, appPreferences, gson);
  }
}
