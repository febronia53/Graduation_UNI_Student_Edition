// Generated by Dagger (https://dagger.dev).
package com.uni.unistudent.data.di;

import com.google.firebase.firestore.FirebaseFirestore;
import com.uni.unistudent.data.FirebaseRepo;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepoModule_ProvideFirebaseRepoFactory implements Factory<FirebaseRepo> {
  private final Provider<FirebaseFirestore> databaseProvider;

  public RepoModule_ProvideFirebaseRepoFactory(Provider<FirebaseFirestore> databaseProvider) {
    this.databaseProvider = databaseProvider;
  }

  @Override
  public FirebaseRepo get() {
    return provideFirebaseRepo(databaseProvider.get());
  }

  public static RepoModule_ProvideFirebaseRepoFactory create(
      Provider<FirebaseFirestore> databaseProvider) {
    return new RepoModule_ProvideFirebaseRepoFactory(databaseProvider);
  }

  public static FirebaseRepo provideFirebaseRepo(FirebaseFirestore database) {
    return Preconditions.checkNotNullFromProvides(RepoModule.INSTANCE.provideFirebaseRepo(database));
  }
}
