// Generated by view binder compiler. Do not edit!
package com.uni.unistudent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.uni.unistudent.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CommentItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView authorComment;

  @NonNull
  public final TextView authorId;

  @NonNull
  public final TextView commentText;

  @NonNull
  public final ImageButton deleteComment;

  @NonNull
  public final LinearLayout linearLayout4;

  @NonNull
  public final LinearLayout linearLayout5;

  @NonNull
  public final TextView timeText;

  @NonNull
  public final ImageButton updateComment;

  private CommentItemBinding(@NonNull ConstraintLayout rootView, @NonNull TextView authorComment,
      @NonNull TextView authorId, @NonNull TextView commentText, @NonNull ImageButton deleteComment,
      @NonNull LinearLayout linearLayout4, @NonNull LinearLayout linearLayout5,
      @NonNull TextView timeText, @NonNull ImageButton updateComment) {
    this.rootView = rootView;
    this.authorComment = authorComment;
    this.authorId = authorId;
    this.commentText = commentText;
    this.deleteComment = deleteComment;
    this.linearLayout4 = linearLayout4;
    this.linearLayout5 = linearLayout5;
    this.timeText = timeText;
    this.updateComment = updateComment;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CommentItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CommentItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.comment_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CommentItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.author_comment;
      TextView authorComment = ViewBindings.findChildViewById(rootView, id);
      if (authorComment == null) {
        break missingId;
      }

      id = R.id.author_id;
      TextView authorId = ViewBindings.findChildViewById(rootView, id);
      if (authorId == null) {
        break missingId;
      }

      id = R.id.comment_text;
      TextView commentText = ViewBindings.findChildViewById(rootView, id);
      if (commentText == null) {
        break missingId;
      }

      id = R.id.delete_comment;
      ImageButton deleteComment = ViewBindings.findChildViewById(rootView, id);
      if (deleteComment == null) {
        break missingId;
      }

      id = R.id.linearLayout4;
      LinearLayout linearLayout4 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout4 == null) {
        break missingId;
      }

      id = R.id.linearLayout5;
      LinearLayout linearLayout5 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout5 == null) {
        break missingId;
      }

      id = R.id.time_text;
      TextView timeText = ViewBindings.findChildViewById(rootView, id);
      if (timeText == null) {
        break missingId;
      }

      id = R.id.update_comment;
      ImageButton updateComment = ViewBindings.findChildViewById(rootView, id);
      if (updateComment == null) {
        break missingId;
      }

      return new CommentItemBinding((ConstraintLayout) rootView, authorComment, authorId,
          commentText, deleteComment, linearLayout4, linearLayout5, timeText, updateComment);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
