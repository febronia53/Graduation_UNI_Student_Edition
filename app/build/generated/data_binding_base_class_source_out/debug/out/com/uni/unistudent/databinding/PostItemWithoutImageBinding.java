// Generated by view binder compiler. Do not edit!
package com.uni.unistudent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.uni.unistudent.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PostItemWithoutImageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView audienceWithout;

  @NonNull
  public final TextView authWithout;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final LinearLayout commentLayout;

  @NonNull
  public final TextView commentsCountTV;

  @NonNull
  public final ImageView commentsImg;

  @NonNull
  public final ConstraintLayout postItemWithout;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView textWithout;

  private PostItemWithoutImageBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView audienceWithout, @NonNull TextView authWithout, @NonNull CardView cardView,
      @NonNull LinearLayout commentLayout, @NonNull TextView commentsCountTV,
      @NonNull ImageView commentsImg, @NonNull ConstraintLayout postItemWithout,
      @NonNull TextView textView3, @NonNull TextView textWithout) {
    this.rootView = rootView;
    this.audienceWithout = audienceWithout;
    this.authWithout = authWithout;
    this.cardView = cardView;
    this.commentLayout = commentLayout;
    this.commentsCountTV = commentsCountTV;
    this.commentsImg = commentsImg;
    this.postItemWithout = postItemWithout;
    this.textView3 = textView3;
    this.textWithout = textWithout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PostItemWithoutImageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PostItemWithoutImageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.post_item_without_image, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PostItemWithoutImageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.audience_without;
      TextView audienceWithout = ViewBindings.findChildViewById(rootView, id);
      if (audienceWithout == null) {
        break missingId;
      }

      id = R.id.auth_without;
      TextView authWithout = ViewBindings.findChildViewById(rootView, id);
      if (authWithout == null) {
        break missingId;
      }

      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.comment_layout;
      LinearLayout commentLayout = ViewBindings.findChildViewById(rootView, id);
      if (commentLayout == null) {
        break missingId;
      }

      id = R.id.comments_count_TV;
      TextView commentsCountTV = ViewBindings.findChildViewById(rootView, id);
      if (commentsCountTV == null) {
        break missingId;
      }

      id = R.id.comments_Img;
      ImageView commentsImg = ViewBindings.findChildViewById(rootView, id);
      if (commentsImg == null) {
        break missingId;
      }

      ConstraintLayout postItemWithout = (ConstraintLayout) rootView;

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.text_without;
      TextView textWithout = ViewBindings.findChildViewById(rootView, id);
      if (textWithout == null) {
        break missingId;
      }

      return new PostItemWithoutImageBinding((ConstraintLayout) rootView, audienceWithout,
          authWithout, cardView, commentLayout, commentsCountTV, commentsImg, postItemWithout,
          textView3, textWithout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
