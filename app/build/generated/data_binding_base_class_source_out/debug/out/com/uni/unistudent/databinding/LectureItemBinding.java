// Generated by view binder compiler. Do not edit!
package com.uni.unistudent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.uni.unistudent.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LectureItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView attendCardLecture;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final TextView fromTimeTv;

  @NonNull
  public final TextView hallOrLabTv;

  @NonNull
  public final ImageView imageProfile;

  @NonNull
  public final TextView lectureIsRunning;

  @NonNull
  public final ImageView lectureIsRunningImg;

  @NonNull
  public final ConstraintLayout lectureView;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final RelativeLayout linearLayout2;

  @NonNull
  public final LinearLayout linearLayout3;

  @NonNull
  public final TextView placeIdTv;

  @NonNull
  public final TextView profNameTv;

  @NonNull
  public final TextView subjectNameTv;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView timeAmPmTv;

  @NonNull
  public final TextView toTimeTv;

  private LectureItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull CardView attendCardLecture, @NonNull ConstraintLayout constraintLayout,
      @NonNull TextView fromTimeTv, @NonNull TextView hallOrLabTv, @NonNull ImageView imageProfile,
      @NonNull TextView lectureIsRunning, @NonNull ImageView lectureIsRunningImg,
      @NonNull ConstraintLayout lectureView, @NonNull LinearLayout linearLayout,
      @NonNull RelativeLayout linearLayout2, @NonNull LinearLayout linearLayout3,
      @NonNull TextView placeIdTv, @NonNull TextView profNameTv, @NonNull TextView subjectNameTv,
      @NonNull TextView textView2, @NonNull TextView timeAmPmTv, @NonNull TextView toTimeTv) {
    this.rootView = rootView;
    this.attendCardLecture = attendCardLecture;
    this.constraintLayout = constraintLayout;
    this.fromTimeTv = fromTimeTv;
    this.hallOrLabTv = hallOrLabTv;
    this.imageProfile = imageProfile;
    this.lectureIsRunning = lectureIsRunning;
    this.lectureIsRunningImg = lectureIsRunningImg;
    this.lectureView = lectureView;
    this.linearLayout = linearLayout;
    this.linearLayout2 = linearLayout2;
    this.linearLayout3 = linearLayout3;
    this.placeIdTv = placeIdTv;
    this.profNameTv = profNameTv;
    this.subjectNameTv = subjectNameTv;
    this.textView2 = textView2;
    this.timeAmPmTv = timeAmPmTv;
    this.toTimeTv = toTimeTv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LectureItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LectureItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.lecture_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LectureItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.attend_card_lecture;
      CardView attendCardLecture = ViewBindings.findChildViewById(rootView, id);
      if (attendCardLecture == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.from_time_tv;
      TextView fromTimeTv = ViewBindings.findChildViewById(rootView, id);
      if (fromTimeTv == null) {
        break missingId;
      }

      id = R.id.hallOrLab_tv;
      TextView hallOrLabTv = ViewBindings.findChildViewById(rootView, id);
      if (hallOrLabTv == null) {
        break missingId;
      }

      id = R.id.image_profile;
      ImageView imageProfile = ViewBindings.findChildViewById(rootView, id);
      if (imageProfile == null) {
        break missingId;
      }

      id = R.id.lecture_is_running;
      TextView lectureIsRunning = ViewBindings.findChildViewById(rootView, id);
      if (lectureIsRunning == null) {
        break missingId;
      }

      id = R.id.lecture_is_running_img;
      ImageView lectureIsRunningImg = ViewBindings.findChildViewById(rootView, id);
      if (lectureIsRunningImg == null) {
        break missingId;
      }

      ConstraintLayout lectureView = (ConstraintLayout) rootView;

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      RelativeLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.linearLayout3;
      LinearLayout linearLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout3 == null) {
        break missingId;
      }

      id = R.id.place_id_tv;
      TextView placeIdTv = ViewBindings.findChildViewById(rootView, id);
      if (placeIdTv == null) {
        break missingId;
      }

      id = R.id.prof_name_tv;
      TextView profNameTv = ViewBindings.findChildViewById(rootView, id);
      if (profNameTv == null) {
        break missingId;
      }

      id = R.id.subject_name_tv;
      TextView subjectNameTv = ViewBindings.findChildViewById(rootView, id);
      if (subjectNameTv == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = ViewBindings.findChildViewById(rootView, id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.time_AmPm_tv;
      TextView timeAmPmTv = ViewBindings.findChildViewById(rootView, id);
      if (timeAmPmTv == null) {
        break missingId;
      }

      id = R.id.to_time_tv;
      TextView toTimeTv = ViewBindings.findChildViewById(rootView, id);
      if (toTimeTv == null) {
        break missingId;
      }

      return new LectureItemBinding((ConstraintLayout) rootView, attendCardLecture,
          constraintLayout, fromTimeTv, hallOrLabTv, imageProfile, lectureIsRunning,
          lectureIsRunningImg, lectureView, linearLayout, linearLayout2, linearLayout3, placeIdTv,
          profNameTv, subjectNameTv, textView2, timeAmPmTv, toTimeTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
