// Generated by view binder compiler. Do not edit!
package com.uni.unistudent.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.uni.unistudent.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PostItemWithImageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView audienceWith;

  @NonNull
  public final TextView authWith;

  @NonNull
  public final Button btComment;

  @NonNull
  public final ImageView postImage;

  @NonNull
  public final ConstraintLayout postItemWith;

  @NonNull
  public final TextView textWith;

  private PostItemWithImageBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView audienceWith, @NonNull TextView authWith, @NonNull Button btComment,
      @NonNull ImageView postImage, @NonNull ConstraintLayout postItemWith,
      @NonNull TextView textWith) {
    this.rootView = rootView;
    this.audienceWith = audienceWith;
    this.authWith = authWith;
    this.btComment = btComment;
    this.postImage = postImage;
    this.postItemWith = postItemWith;
    this.textWith = textWith;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PostItemWithImageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PostItemWithImageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.post_item_with_image, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PostItemWithImageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.audience_with;
      TextView audienceWith = ViewBindings.findChildViewById(rootView, id);
      if (audienceWith == null) {
        break missingId;
      }

      id = R.id.auth_with;
      TextView authWith = ViewBindings.findChildViewById(rootView, id);
      if (authWith == null) {
        break missingId;
      }

      id = R.id.bt_comment;
      Button btComment = ViewBindings.findChildViewById(rootView, id);
      if (btComment == null) {
        break missingId;
      }

      id = R.id.post_image;
      ImageView postImage = ViewBindings.findChildViewById(rootView, id);
      if (postImage == null) {
        break missingId;
      }

      ConstraintLayout postItemWith = (ConstraintLayout) rootView;

      id = R.id.text_with;
      TextView textWith = ViewBindings.findChildViewById(rootView, id);
      if (textWith == null) {
        break missingId;
      }

      return new PostItemWithImageBinding((ConstraintLayout) rootView, audienceWith, authWith,
          btComment, postImage, postItemWith, textWith);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
